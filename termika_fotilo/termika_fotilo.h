

// Displayanschluesse:
const PROGMEM uint8_t CS_  = 10;
const PROGMEM uint8_t DC_  = 9;
const PROGMEM uint8_t RST_ = 8;  

// Farb-Spektrum
const int16_t MINTEMP = -5 << 7;
const uint16_t MAXTEMP = 30 << 7;

const uint8_t ZOOM = 7;         // Vergroesserungfaktor
uint8_t Weight[ZOOM+1][ZOOM+1];


// Allgemein
// u = 1/(Z*Z);
// const float Weight[ZOOM+1][ZOOM+1] = {
//   {(Z-0)*(Z-0), (Z-0)*(Z-1), (Z-0)*(Z-2), (Z-0)*(Z-3),..., (Z-0)*1, (Z-0)*0},
//   {(Z-1)*(Z-0), (Z-1)*(Z-1), (Z-1)*(Z-2), (Z-1)*(Z-3),..., (Z-1)*1, (Z-1)*0},
//   {(Z-2)*(Z-0), (Z-2)*(Z-1), (Z-2)*(Z-2), (Z-2)*(Z-3),..., (Z-2)*1, (Z-2)*0},
//   {...},
//   {...},
//   {...},
//   {1*(Z-0),     1*(Z-1),     1*(Z-2),     1*(Z-3)    ,..., 1*1,     1*0},
//   {0*(Z-0),     0*(Z-1),     0*(Z-2),     0*(Z-3)    ,..., 0*1,     0*0}} multipliziert mit u;


void StartScreen(void);
void OutAmbientTemp(void);
void HSVtoRGB(uint8_t &, uint8_t &, uint8_t &, float);
void OutTempField(void);
float LinInterpol (float, float, uint8_t, uint8_t, uint8_t);

/**
 * MINTEMP...MAXTEMP lÃ¤uft eigentlich nur von Index 0x00..0xAA.
 * ABER MAXTEMP heisst nicht, dass es nicht heisser werden kann!!!
 * Damit noch irgend eine Farbe dargestellt wird, sind die Elemente von
 * 0xAB..0xFF alle auf maximale Farbtemperatur eingestellt. Klar geht das
 * besser. Bei MINTEMP liegt das analoge Problem vor.
 */

const uint16_t PROGMEM colormap[0x100] = {
  0x7800, 0x7800, 0x7820, 0x7840, 0x7860, 0x7880, 0x78a0, 0x78c0, 0x78e0,
  0x7900, 0x7920, 0x7940, 0x7960, 0x7980, 0x79a0, 0x79c0, 0x79e0, 0x7a00,
  0x7a20, 0x7a40, 0x7a60, 0x7a80, 0x7aa0, 0x7ac0, 0x7ae0, 0x7b00, 0x7b20,
  0x7b40, 0x7b60, 0x7b80, 0x7ba0, 0x7bc0, 0x7be0, 0x7be0, 0x73e0, 0x73e0,
  0x6be0, 0x6be0, 0x63e0, 0x63e0, 0x5be0, 0x5be0, 0x53e0, 0x53e0, 0x4be0,
  0x4be0, 0x43e0, 0x43e0, 0x3be0, 0x3be0, 0x33e0, 0x33e0, 0x2be0, 0x2be0,
  0x23e0, 0x23e0, 0x1be0, 0x1be0, 0x13e0, 0x13e0, 0x0be0, 0x0be0, 0x03e0,
  0x03e0, 0x03e0, 0x03e0, 0x03e0, 0x03e1, 0x03e1, 0x03e2, 0x03e2, 0x03e3,
  0x03e3, 0x03e4, 0x03e4, 0x03e5, 0x03e5, 0x03e6, 0x03e6, 0x03e7, 0x03e7,
  0x03e8, 0x03e8, 0x03e9, 0x03e9, 0x03ea, 0x03ea, 0x03eb, 0x03eb, 0x03ec,
  0x03ec, 0x03ed, 0x03ed, 0x03ee, 0x03ee, 0x03ef, 0x03ef, 0x03cf, 0x03af,
  0x038f, 0x036f, 0x034f, 0x032f, 0x030f, 0x02ef, 0x02cf, 0x02af, 0x028f,
  0x026f, 0x024f, 0x022f, 0x020f, 0x01ef, 0x01cf, 0x01af, 0x018f, 0x016f,
  0x014f, 0x012f, 0x010f, 0x00ef, 0x00cf, 0x00af, 0x008f, 0x006f, 0x004f,
  0x002f, 0x000f, 0x000f, 0x000f, 0x000f, 0x080f, 0x080f, 0x100f, 0x100f,
  0x180f, 0x180f, 0x200f, 0x200f, 0x280f, 0x280f, 0x300f, 0x300f, 0x380f,
  0x380f, 0x400f, 0x400f, 0x480f, 0x480f, 0x500f, 0x500f, 0x580f, 0x580f,
  0x600f, 0x600f, 0x680f, 0x680f, 0x700f, 0x700f, 0x780f, 0x780f, 0x780f,
  0x780e, 0x780e, 0x780d, 0x780d, 0x780c, 0x780c, 0x780b, 0x780b, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a, 0x780a,
  0x780a, 0x780a, 0x780a, 0x780a
};


